/* Generated By:JavaCC: Do not edit this line. AtroemConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AtroemConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MAIN = 1;
  /** RegularExpression Id. */
  int PROGR = 2;
  /** RegularExpression Id. */
  int FINPROGR = 3;
  /** RegularExpression Id. */
  int NPROGRAMA = 4;
  /** RegularExpression Id. */
  int TRUE = 5;
  /** RegularExpression Id. */
  int FALSE = 6;
  /** RegularExpression Id. */
  int OPY = 7;
  /** RegularExpression Id. */
  int OPO = 8;
  /** RegularExpression Id. */
  int MENOR = 9;
  /** RegularExpression Id. */
  int MAYOR = 10;
  /** RegularExpression Id. */
  int IGUAL = 11;
  /** RegularExpression Id. */
  int DIFERENTEDE = 12;
  /** RegularExpression Id. */
  int DPUNTOS = 13;
  /** RegularExpression Id. */
  int ASIGNAR = 14;
  /** RegularExpression Id. */
  int MENORIGUAL = 15;
  /** RegularExpression Id. */
  int MAYORIGUAL = 16;
  /** RegularExpression Id. */
  int PUCOMA = 17;
  /** RegularExpression Id. */
  int INC = 18;
  /** RegularExpression Id. */
  int DEC = 19;
  /** RegularExpression Id. */
  int DCOMILLA = 20;
  /** RegularExpression Id. */
  int COMA = 21;
  /** RegularExpression Id. */
  int NEGACION = 22;
  /** RegularExpression Id. */
  int SUMA = 23;
  /** RegularExpression Id. */
  int RESTA = 24;
  /** RegularExpression Id. */
  int MULTI = 25;
  /** RegularExpression Id. */
  int DIVISION = 26;
  /** RegularExpression Id. */
  int RESIDUO = 27;
  /** RegularExpression Id. */
  int POTENCIA = 28;
  /** RegularExpression Id. */
  int PARI = 29;
  /** RegularExpression Id. */
  int PARD = 30;
  /** RegularExpression Id. */
  int LLAI = 31;
  /** RegularExpression Id. */
  int LLAD = 32;
  /** RegularExpression Id. */
  int CORI = 33;
  /** RegularExpression Id. */
  int CORD = 34;
  /** RegularExpression Id. */
  int ENTERO = 35;
  /** RegularExpression Id. */
  int DECIMAL = 36;
  /** RegularExpression Id. */
  int CARACTER = 37;
  /** RegularExpression Id. */
  int CADE = 38;
  /** RegularExpression Id. */
  int BOOLEANO = 39;
  /** RegularExpression Id. */
  int SI = 40;
  /** RegularExpression Id. */
  int SINO = 41;
  /** RegularExpression Id. */
  int NOSI = 42;
  /** RegularExpression Id. */
  int OPCION = 43;
  /** RegularExpression Id. */
  int CASO = 44;
  /** RegularExpression Id. */
  int INTERRUMPIR = 45;
  /** RegularExpression Id. */
  int PORDEFECTO = 46;
  /** RegularExpression Id. */
  int FOR = 47;
  /** RegularExpression Id. */
  int WHILE = 48;
  /** RegularExpression Id. */
  int DO = 49;
  /** RegularExpression Id. */
  int ENTRADA = 50;
  /** RegularExpression Id. */
  int SALIDA = 51;
  /** RegularExpression Id. */
  int VARIABLE = 52;
  /** RegularExpression Id. */
  int NUMERO = 53;
  /** RegularExpression Id. */
  int NUMERODEC = 54;
  /** RegularExpression Id. */
  int CARAC = 55;
  /** RegularExpression Id. */
  int CADENA = 56;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"principal()\"",
    "\"Programa\"",
    "\"Fin\"",
    "<NPROGRAMA>",
    "\"verdadero\"",
    "\"falso\"",
    "\"&\"",
    "\"|\"",
    "\"<\"",
    "\">\"",
    "\"==\"",
    "\"!=\"",
    "\":\"",
    "\"=\"",
    "\"<=\"",
    "\">=\"",
    "\";\"",
    "\"++\"",
    "\"--\"",
    "\"\\\"\"",
    "\",\"",
    "\"!\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"^\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"ENT\"",
    "\"DEC\"",
    "\"SIM\"",
    "\"CAD\"",
    "\"BOOL\"",
    "\"si\"",
    "\"sino\"",
    "\"nosi\"",
    "\"opcion\"",
    "\"caso\"",
    "\"cortar\"",
    "\"porDefecto\"",
    "\"hasta\"",
    "\"mientras\"",
    "\"hacer\"",
    "\"leer\"",
    "\"escribir\"",
    "<VARIABLE>",
    "<NUMERO>",
    "<NUMERODEC>",
    "<CARAC>",
    "<CADENA>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
  };

}
